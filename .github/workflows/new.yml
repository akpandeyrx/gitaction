on:
  #   pull_request:
    push:
      branches:
        - main
        - master
        - release*
        - develop
  
env:
      # URL: pandeyak1991
      # ECR_REPOSITORY: test
      # REGISTRY_IMAGE: pandeyak1991/test
      # NonProdEnvName: ${{vars.test}}
  
jobs:
    build:
      runs-on: ubuntu-latest
      # strategy:
      #   fail-fast: false
      #   matrix:
      #     platform:
      #       - linux/amd64
      #       # - linux/arm/v7
      #       # - linux/arm64/v8
      #       # - linux/s390x
      #       # - linux/ppc64le
  
      
      steps:
       -
          name: Checkout
          uses: actions/checkout@v3
      #  -
      #     name: Docker meta
      #     id: meta
      #     uses: docker/metadata-action@v4
      #     with:
      #       images: ${{ env.REGISTRY_IMAGE }}
       -
          name: Set up QEMU
          # uses: docker/setup-qemu-action@v2
          run: 
              echo ${{vars.test}}
      #  -
      #     name: Set up Docker Buildx
      #     uses: docker/setup-buildx-action@v2   
          
      #  -  name: ecr login
      #     id: login-ecr
      #     run: |
      #         docker login --username pandeyak1991 --password pandeyji89 
  
       
      #  - name: Build and push
      #    uses: docker/build-push-action@v4
      #    with:
      #         push: false
      #         tags: |
      #           ${{ env.REGISTRY_IMAGE }}:latest
      #         cache-from: type=gha
      #         cache-to: type=gha,mode=max
      #         outputs: type=docker,dest=/tmp/test.tar


         

      #  - name: Upload artifact
      #    uses: actions/upload-artifact@v3
      #    with:
      #           name: docker-image
      #           path: /tmp/test.tar
    # merge:
    #    name: pushing-merge
    #    runs-on: ubuntu-latest
    #    needs:
    #      - build
    #    environment:  NonProd
    #    env:
    #     NonProdEnvName: ${{env.NonProdEnvName}}
    #    steps:
  
    
    #      -
    #       name: Download image
    #       uses: actions/download-artifact@v3
    #       with:
    #        name: docker-image
    #        path: /tmp/

    #      - name: ecr login
    #        id: login-ecr
    #        run: |
    #            docker login --username pandeyak1991 --password pandeyji89 
   
    #     #  -
    #     #    name: Set up Docker Buildx
    #     #    uses: docker/setup-buildx-action@v2

  
    #      - name: Load Docker image
    #        run: |
    #         docker load --input /tmp/test.tar  

    #      - name: tagging for env
    #        run: |
    #         docker tag ${{ env.REGISTRY_IMAGE}}:latest ${{ env.REGISTRY_IMAGE}}:${{env.NonProdEnvName}}-${{github.sha}}
    #         docker push  ${{ env.REGISTRY_IMAGE}}:${{env.NonProdEnvName}}-${{github.sha}}
