on:
#   pull_request:
  push:
    branches:
      - main
      - master
      - release*
      - develop

env:
    # URL: pandeyak1991
    # ECR_REPOSITORY: test
    REGISTRY_IMAGE: pandeyak1991/test


jobs:
  build:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     platform:
    #       - linux/amd64
    #       - linux/arm/v7
    #       - linux/arm64/v8
    #       - linux/s390x
    #       - linux/ppc64le

    # outputs:
    #   imagePushed: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
    
    steps:
     -
        name: Checkout
        uses: actions/checkout@v3
     -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
     -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
     -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2   
        
     -  name: ecr login
        id: login-ecr
        run: |
            docker login --username pandeyak1991 --password pandeyji89 

     -
       name: Build and push by digest
       id: build
       uses: docker/build-push-action@v4
       with:
            tags: test:prod-${{ github.sha }}
            # platforms: ${{ matrix.platform }}
            # labels: ${{ steps.meta.outputs.labels }}
            push: false
            cache-from: type=gha
            cache-to: type=gha,mode=max
            # push-by-digest: true
            outputs: type=docker,dest=/tmp/test.tar
            # name-canonical: true
            
     - name: Upload artifact
       uses: actions/upload-artifact@v3
       with:
              name: docker-image
              path: /tmp/test.tar

  merge:
     runs-on: ubuntu-latest
     needs:
       - build
     strategy:
        fail-fast: false
        matrix:
          platform:
            - linux/amd64
            - linux/arm/v7
            - linux/arm64/v8
            - linux/s390x
            - linux/ppc64le
     steps:
       - name: Download artifact
         uses: actions/download-artifact@v3
         with:
              name: docker-image
              path: /tmp
       - name: Load Docker image
         run: |
            docker load --input /tmp/test.tar
       -
         name: building digest
         run: |
            mkdir -p /tmp/digests
            digest="${{ needs.build.outputs.digest }}"
            touch "/tmp/digests/${digest#sha256:}"
    #  -
    #   name: Upload digest
    #   uses: actions/upload-artifact@v3
    #   with:
    #         name: digests
    #         path: /tmp/digests/*
    #         if-no-files-found: error
    #         retention-days: 1

      #  -
      #   name: Download digests
      #   uses: actions/download-artifact@v3
      #   with:
      #    name: digests
      #    path: /tmp/digests
       -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
       - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
       -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
            images: ${{ env.REGISTRY_IMAGE }}

       -
        name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
       -
        name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}